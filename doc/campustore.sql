-- MySQL Script generated by MySQL Workbench
-- Mon Oct 27 20:02:36 2014
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema campustore
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema campustore
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `campustore` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `campustore` ;

-- -----------------------------------------------------
-- Table `campustore`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `campustore`.`user` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nick_name` VARCHAR(45) NULL COMMENT 'To be displayed in user’s home page',
  `email` VARCHAR(45) NOT NULL COMMENT 'Must be .edu email address.\nAs unique name for login',
  `password` VARCHAR(45) NOT NULL COMMENT 'encrypted by md5',
  `phone` VARCHAR(45) NULL,
  `first_name` VARCHAR(45) NOT NULL,
  `last_name` VARCHAR(45) NOT NULL,
  `type` VARCHAR(45) NOT NULL COMMENT 'can be:\nadmin\nregular',
  `status` VARCHAR(45) NOT NULL COMMENT 'can be:\nnormal\nbanned\n',
  `banned_util` DATETIME NULL,
  `address` VARCHAR(255) NULL,
  PRIMARY KEY (`id`, `email`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `campustore`.`category`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `campustore`.`category` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `campustore`.`product`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `campustore`.`product` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `description` TEXT(5000) NULL,
  `create_date` VARCHAR(45) NOT NULL,
  `price` FLOAT NOT NULL,
  `order_status` VARCHAR(45) NOT NULL COMMENT 'can be:\navailable\nordered\nsold',
  `quantity` INT NULL,
  `next_time` DATETIME NULL COMMENT 'Next available time (if it’s not sold in last order)',
  `icon` VARCHAR(255) NULL,
  `user_id` INT NOT NULL COMMENT 'the owner’s id of a product',
  `category_id` INT NOT NULL,
  PRIMARY KEY (`id`, `user_id`, `category_id`),
  INDEX `fk_product_user_idx` (`user_id` ASC),
  INDEX `fk_product_category1_idx` (`category_id` ASC),
  CONSTRAINT `fk_product_user`
    FOREIGN KEY (`user_id`)
    REFERENCES `campustore`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_product_category1`
    FOREIGN KEY (`category_id`)
    REFERENCES `campustore`.`category` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `campustore`.`picture`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `campustore`.`picture` (
  `path` VARCHAR(255) NOT NULL,
  `product_id` INT NOT NULL,
  PRIMARY KEY (`product_id`, `path`),
  INDEX `fk_picture_product1_idx` (`product_id` ASC),
  CONSTRAINT `fk_picture_product1`
    FOREIGN KEY (`product_id`)
    REFERENCES `campustore`.`product` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `campustore`.`order`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `campustore`.`order` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `buyer_id` INT NOT NULL,
  `product_id` INT NOT NULL,
  `date_time` DATETIME NULL,
  `status` VARCHAR(45) NULL COMMENT 'can be:\ncomplete\nordered\ncanceled',
  `total_price` FLOAT NULL,
  `quantity` INT NULL,
  PRIMARY KEY (`id`, `buyer_id`, `product_id`),
  INDEX `fk_order_user1_idx` (`buyer_id` ASC),
  INDEX `fk_order_product1_idx` (`product_id` ASC),
  CONSTRAINT `fk_order_user1`
    FOREIGN KEY (`buyer_id`)
    REFERENCES `campustore`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_order_product1`
    FOREIGN KEY (`product_id`)
    REFERENCES `campustore`.`product` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `campustore`.`message`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `campustore`.`message` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `sender_id` INT NOT NULL,
  `receiver_id` INT NOT NULL,
  `date_time` DATETIME NULL,
  `title` VARCHAR(45) NULL,
  `body` TEXT(5000) NULL,
  `status` VARCHAR(45) NULL COMMENT 'can be:\nunread\nread\nfailed',
  PRIMARY KEY (`id`, `sender_id`, `receiver_id`),
  INDEX `fk_message_user1_idx` (`sender_id` ASC),
  INDEX `fk_message_user2_idx` (`receiver_id` ASC),
  CONSTRAINT `fk_message_user1`
    FOREIGN KEY (`sender_id`)
    REFERENCES `campustore`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_message_user2`
    FOREIGN KEY (`receiver_id`)
    REFERENCES `campustore`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `campustore`.`cart`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `campustore`.`cart` (
  `user_id` INT NOT NULL,
  `product_id` INT NOT NULL,
  PRIMARY KEY (`user_id`, `product_id`),
  INDEX `fk_cart_product1_idx` (`product_id` ASC),
  CONSTRAINT `fk_cart_product1`
    FOREIGN KEY (`product_id`)
    REFERENCES `campustore`.`product` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `campustore`.`review`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `campustore`.`review` (
  `id` INT NOT NULL,
  `user_id` INT NOT NULL,
  `reviewer_id` INT NOT NULL,
  `product_id` INT NOT NULL,
  `content` VARCHAR(5000) NULL,
  PRIMARY KEY (`id`, `user_id`, `reviewer_id`, `product_id`),
  INDEX `fk_review_user1_idx` (`user_id` ASC),
  INDEX `fk_review_user2_idx` (`reviewer_id` ASC),
  INDEX `fk_review_product1_idx` (`product_id` ASC),
  CONSTRAINT `fk_review_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `campustore`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_review_user2`
    FOREIGN KEY (`reviewer_id`)
    REFERENCES `campustore`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_review_product1`
    FOREIGN KEY (`product_id`)
    REFERENCES `campustore`.`product` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
